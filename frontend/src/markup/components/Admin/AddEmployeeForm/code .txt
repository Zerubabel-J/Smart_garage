const [employee_email, setEmail] = useState('');
const [employee_first_name, setFirstName] = useState('');
const [employee_last_name, setLastName] = useState('');
const [employee_phone, setPhoneNumber] = useState('');
const [employee_password, setPassword] = useState('');
const [active_employee, setActive_employee] = useState(1);
const [company_role_id, setCompany_role_id] = useState(1);
// Errors 
const [emailError, setEmailError] = useState('');
const [firstNameRequired, setFirstNameRequired] = useState('');
const [passwordError, setPasswordError] = useState('');
const [success, setSuccess] = useState(false);
const [serverError, setServerError] = useState('');

// create validation function
const validate = () => {
    let isValid = true;

  // validate first name
  if(!employee_first_name) {
    setFirstNameRequired('First name is required');
    isValid = false;
  }

  // validate email
  if(!employee_email) {
    setEmailError('Email is required');
    isValid = false;
  } else if(!employee_email.includes('@')) {
    setEmailError('Invalid email format');
    isValid = false;
  }

  // validate password
  if(!employee_password || employee_password.length < 6) {
    setPasswordError('Password must be at least 6 characters');
    isValid = false;
  }

  return isValid;
}

// create handleSubmit function
const handleSubmit = async (e) => {
  e.preventDefault();

  // validate form
  const isValid = validate();

  // if valid, submit to server
  if(isValid) {

    try {

      const response = await fetch('/api/employees', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          employee_email,
          employee_first_name,
          employee_last_name,
          employee_phone,
          employee_password,
          active_employee,
          company_role_id
        })
      });

      const result = await response.json();

      if(response.ok) {
        setSuccess(true);
        setTimeout(() => {
          navigate('/employees');
        }, 2000);
      } else {
        setServerError(result.message);
      }

    } catch (error) {
      console.error(error);
      setServerError('Server error. Please try again later.');
    }

  }

}
// Submit form if validations pass
if (valid) {
  // Call API to create employee
  const response = await employeeService.createEmployee({
    employee_email,
    employee_first_name,
    employee_last_name,
    employee_phone,
    employee_password,
    active_employee,
    company_role_id
  });

  // Handle response
  if(response.ok) {
    setSuccess(true);
  } else {
    const {message} = await response.json();
    setServerError(message);
  }

}

// Handle errors
if(response.ok) {
  setSuccess(true);
  setServerError('');
} else {
  const {message} = await response.json();
  setServerError(message);
}

// Handle errors
if(!response.ok) {
  const {message} = await response.json();
  setServerError(message);
}

